<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[酒飲みの備忘録]]></title>
  <link href="http://amacbee.github.io/atom.xml" rel="self"/>
  <link href="http://amacbee.github.io/"/>
  <updated>2013-05-27T19:50:09+09:00</updated>
  <id>http://amacbee.github.io/</id>
  <author>
    <name><![CDATA[a.macbee]]></name>
    <email><![CDATA[a.macbee@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[最低限のサーバ監視]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/6/"/>
    <updated>2013-05-27T07:46:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/6</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>先日サーバ設定を一新したのですが，そういえばログの監視をしていなかった．  <br/>
ということで，logwatchでも導入しよう．  <br/>
（logwatchを導入することで，logを整形して1日1回メールで報告してくれる．<code>/etc/cron.daily</code>に<code>0logwatch</code>が追加されてるはず）  <br/></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install logwatch</span></code></pre></td></tr></table></div></figure>


<p>メールを届ける環境が整っているのか確かめたい場合は，以下のコマンドを利用して，試しに自分宛にメールを送ってみて下さい．  <br/></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo logwatch --mailto [自分のメールアドレス]</span></code></pre></td></tr></table></div></figure>


<p>無事に送信できることを確認したら，以下のとおり設定ファイルを編集  <br/>
詳細については，以下のサイトを参照．  <br/>
URL：<a href="http://landisk.kororo.jp/diary/29_logwatch.php">http://landisk.kororo.jp/diary/29_logwatch.php</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo emacs /etc/logwatch/conf/logwatch.conf
</span><span class='line'>    Detail = Med
</span><span class='line'>    MailTo = [自分のメールアドレス]
</span><span class='line'>    Range = yesterday</span></code></pre></td></tr></table></div></figure>


<p>ひとまずこれで．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[恋に落ちるエディタ - Sublime Text - との関係をリセット]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/5/"/>
    <updated>2013-05-27T07:30:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/5</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>もともとEmacs大好き！な私ですが，ちょっと前から恋に落ちると噂のエディタ &ndash; Sublime Text &ndash; とEmacsの2刀流使い的なことをしていました．  <br/>
Sublime Text凄くカッコ良いしPython and JSONベースでごにょごにょ出来るの素晴らしいし色々な環境構築も楽なのでいずれは移行したい，でも現状は.emacs.d/*の方が設定充実してる…といった感じだったのですが，ここ最近新しい言語／環境を勉強する機会が増え，ここらで本格的にSublimeの設定見なおそう！と思いたち，1から設定をやり直しましたｗ  <br/>
以下はそのまとめです．  <br/></p>

<p>Sublime Text：<a href="http://www.sublimetext.com/">http://www.sublimetext.com/</a>  <br/>
（いつの間にかβ版じゃなくなっている。。。）</p>

<h2>Package Controlを導入</h2>

<p>まず最初にPackage Controlを導入する．これ一つで便利なPackage群をコマンド一発で入れられるようになる．便利．</p>

<ul>
<li><code>View</code> → <code>Show Console</code></li>
<li>以下のコードを入力</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">urllib2</span><span class="o">,</span><span class="nn">os</span><span class="p">;</span> <span class="n">pf</span><span class="o">=</span><span class="s">&#39;Package Control.sublime-package&#39;</span><span class="p">;</span> <span class="n">ipp</span><span class="o">=</span><span class="n">sublime</span><span class="o">.</span><span class="n">installed_packages_path</span><span class="p">();</span> <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">ipp</span><span class="p">)</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">ipp</span><span class="p">)</span> <span class="k">else</span> <span class="bp">None</span><span class="p">;</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">install_opener</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">build_opener</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">ProxyHandler</span><span class="p">()));</span> <span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">ipp</span><span class="p">,</span><span class="n">pf</span><span class="p">),</span><span class="s">&#39;wb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&#39;http://sublime.wbond.net/&#39;</span><span class="o">+</span><span class="n">pf</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span><span class="s">&#39;%20&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">());</span> <span class="k">print</span> <span class="s">&#39;Please restart Sublime Text to finish installation&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>Please restart Sublime Text to finish installation</code> が表示されるので，リスタート</li>
</ul>


<h2>Emacsキーバインドの設定</h2>

<p>Sublemacsproを導入．この一連の流れ簡単すぎて感激←</p>

<ul>
<li><code>cmd-Shift-p</code>でコマンドパレットを開き，<code>Package Control: Install Package</code>を選択</li>
<li><code>sublemacspro</code>を選択（emacsで検索すると候補にあがる！）</li>
</ul>


<h2>ユーザ設定ファイルを編集</h2>

<p><code>cmd-,</code>でユーザ設定ファイルを開き，これを編集する（JSON形式）．</p>

<h3>環境変数設定</h3>

<p><code>echo $PATH</code>で出力されるPATHを貼り付け．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;build_env&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;PATH&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/texbin&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>フォント設定</h3>

<p>プログラミング時に使うフォントとして，Rictyを指定．  <br/>
（Ricty自体の導入方法については延べません＞＜興味のある方はリンク先を参照：<a href="http://save.sys.t.u-tokyo.ac.jp/~yusa/fonts/ricty.html%EF%BC%89">http://save.sys.t.u-tokyo.ac.jp/~yusa/fonts/ricty.html%EF%BC%89</a>  <br/></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;font_face&quot;</span><span class="p">:</span> <span class="s2">&quot;Ricty&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;font_size&quot;</span><span class="p">:</span> <span class="mf">14.0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>その他細かい設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;highlight_line&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>     <span class="err">//</span> <span class="err">選択行のハイライト</span>
</span><span class='line'>    <span class="nt">&quot;translate_tabs_to_spaces&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>    <span class="err">//</span> <span class="err">tabをspaceに変換</span>
</span><span class='line'>    <span class="nt">&quot;ignored_packages&quot;</span><span class="p">:</span>     <span class="err">//</span> <span class="err">viの設定はいらない</span>
</span><span class='line'>    <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;Vintage&quot;</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>TeX環境の構築</h2>

<p>論文を書いてる暇つぶｒｙ…に環境構築などやっているので，一番最初にTeX環境を整えてみた＼(^o^)／ｗ  <br/>
SublimeのTeX環境としてはLaTeXToolsが一般的．</p>

<ul>
<li><code>cmd+Shift+p</code> → <code>Package Control: Install Package</code> → <code>LaTeXTools</code></li>
<li><code>LaTeXTools/LaTeX.sublime-build</code>を開く</li>
<li>以下の通りに編集（Macについての記述は34行目付近）</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;cmd&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;latexmk&quot;</span><span class="p">,</span> <span class="s2">&quot;-cd&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;-e&quot;</span><span class="p">,</span> <span class="s2">&quot;\\$pdflatex = &#39;pdflatex %O -interaction=nonstopmode -synctex=1 %S&#39;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="err">//</span><span class="s2">&quot;-silent&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;-f&quot;</span><span class="p">,</span> <span class="s2">&quot;-pdf&quot;</span><span class="p">],</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>↓↓↓</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;cmd&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;latexmk&quot;</span><span class="p">,</span> <span class="s2">&quot;-cd&quot;</span><span class="p">,</span> <span class="s2">&quot;-f&quot;</span><span class="p">,</span> <span class="s2">&quot;-pv&quot;</span><span class="p">],</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上で設定終了．<code>cmd+b</code>でbuildできる．</p>

<p>ここらで力尽きたので，その他の設定はまた後ほど．  <br/>
ちなみに各種プラグインの情報については，以下のサイトがおすすめ．  <br/>
<a href="http://powerful-code.com/blog/2012/11/plugins-for-st2/">http://powerful-code.com/blog/2012/11/plugins-for-st2/</a>  <br/>
<a href="http://blog.hifumi.info/mac/sublime-text-2-for-mac/">http://blog.hifumi.info/mac/sublime-text-2-for-mac/</a></p>

<p>…Octpressめちゃくちゃ気になってるんだよな．  <br/>
そのうち移行するかもです．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python環境 for 集合知プログラミング]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/4/"/>
    <updated>2013-05-27T07:21:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/4</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>常日頃からデータマイニングを勉強したいという方にはO&#8217;REILLYの「集合知プログラミング」をオススメしていた私ですが，色々あってこの本を参考書にデータマイニング勉強会を開くことになりました．  <br/>
この本はPythonをベースとして書かれているのですが，勉強会向けにVPS上にPython環境 for 集合知プログラミングを構築しましたのでまとめます．  <br/>
必要ライブラリのリストは，「付録A サードパーティによるライブラリたち」を参考にしました（導入にはpipを利用しています）．</p>

<h2>Python 2.7.x の導入</h2>

<p>CentOS 6.3に2.7系を導入する（標準は2.6系）．</p>

<p>インストールに必要なものたちを導入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install zlib zlib-devel tk-devel tcl-devel sqlite-devel ncurses-devel gdbm-devel readline-devel bzip2-devel db4-devel openssl-devel</span></code></pre></td></tr></table></div></figure>


<p>Pythonをダウンロードして解凍</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://www.python.org/ftp/python/2.7/Python-2.7.tgz
</span><span class='line'>$ tar xzvf Python-2.7.tgz</span></code></pre></td></tr></table></div></figure>


<p>インストール</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./configure --with-threads --enable-shared --prefix=/usr/local
</span><span class='line'>$ make
</span><span class='line'>$ sudo make install</span></code></pre></td></tr></table></div></figure>


<p>これでOK！  <br/>
正常にインストールされているかどうかは以下のコマンドで確認できる．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ python -V
</span><span class='line'>Python 2.7.2</span></code></pre></td></tr></table></div></figure>


<p>ここでもし下記のメッセージ</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python: error while loading shared libraries: libpython2.7.so.1.0: cannot open shared object file: No such file or directory</span></code></pre></td></tr></table></div></figure>


<p>が表示された場合は，.bashrcなどに<code>LD_LIBRARY_PATH</code>を追加</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
</span><span class='line'>$ source .bashrc</span></code></pre></td></tr></table></div></figure>


<h2>Pythonパッケージ管理システムの導入</h2>

<p>easy_installおよびpipを導入．  <br/>
setuptoolsではなくdistributeから入れます．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://python-distribute.org/distribute_setup.py
</span><span class='line'>$ sudo /usr/local/bin/python2.7 distribute_setup.py
</span><span class='line'>$ sudo easy_install pip</span></code></pre></td></tr></table></div></figure>


<h2>必要ライブラリの導入</h2>

<p>導入したライブラリ群は以下のコマンドで確かめられる．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pip freeze</span></code></pre></td></tr></table></div></figure>


<h3>A.1 Universal Feed Parser</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pip install feedparser</span></code></pre></td></tr></table></div></figure>


<h3>A.2 PIL（Python Image Library）</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pip install pil</span></code></pre></td></tr></table></div></figure>


<h3>A.3 Beautiful Soup</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pip install beautifulsoup</span></code></pre></td></tr></table></div></figure>


<h3>A4 pysqlite</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pip install pysqlite</span></code></pre></td></tr></table></div></figure>


<p>※標準で入っているsqlite3でも良いと思います．</p>

<h3>A.5 Numpy（ついでにScipy）</h3>

<p>NumPyおよびSciPyを導入するために，以下の3つを導入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install gcc-gfortran
</span><span class='line'>$ sudo yum install blas-devel
</span><span class='line'>$ sudo yum install lapack-devel</span></code></pre></td></tr></table></div></figure>


<p>NumPyおよびSciPyのインストール</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pip install numpy
</span><span class='line'>$ sudo pip install scipy</span></code></pre></td></tr></table></div></figure>


<h3>A.6 matplotlib</h3>

<p>matplotlibを導入するために，以下を導入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install libpng-devel</span></code></pre></td></tr></table></div></figure>


<p>matplotlibのインストール</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pip install matplotlib</span></code></pre></td></tr></table></div></figure>


<h3>A.7 pydelicious</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pip install pydelicious</span></code></pre></td></tr></table></div></figure>


<p>以上で環境構築は終了（だと思われます）！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cent OS 6.3にexFATをmountした話]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/3/"/>
    <updated>2013-05-27T07:13:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/3</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>諸事情により，Cent OS 6.3にexFATでフォーマットされたUSBをmountしてみましたのでそのまとめ（exFATはdefaultではサポートされていない）．  <br/>
参考にしたページ：<a href="http://yowatari.hatenablog.com/entry/2012/08/29/200325">CentOS6.3でexFATをマウントする</a></p>

<p>まずは必要ライブラリを先にinstall．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yum install auto-buildrequires fuse-devel scons gcc rpm-build</span></code></pre></td></tr></table></div></figure>


<p>次に<a href="https://code.google.com/p/exfat/">ココ</a>から<code>exfat-utils</code>および<code>fuse-exfat</code>をdownloadしてくる．
ちなみに今回導入したVer.は以下の通り．</p>

<ul>
<li>exfat-utils-1.0.1.tar.gz</li>
<li>fuse-exfat-1.0.1.tar.gz</li>
</ul>


<p>downloadしたフォルダを展開し，それぞれのフォルダにて以下のコマンドを実行（詳細はREADMEを参照）．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ scons
</span><span class='line'>$ sudo scons install</span></code></pre></td></tr></table></div></figure>


<p>これでmountの準備ができた．</p>

<p>実際にmountしてみる．  <br/>
今回は，<code>/mnt/usb</code>というフォルダを作成し，そこへのmountを試みる．なお，USBに割り当てられたデバイス名は事前に確認しておく（dmesgコマンド等を活用して下さい）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mount -t exfat /dev/sdb1 /mnt/usb</span></code></pre></td></tr></table></div></figure>


<p>成功していれば，<code>FUSE exfat 1.0.1</code>のようなメッセージが出る．</p>

<p>これで無事にmountできました．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ソーシャルグラフに関するあれやこれや]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/2/"/>
    <updated>2013-05-27T07:01:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/2</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>Facebook Graph APIに関してざっと学んだことをまとめます．  <br/>
参考にしたページ：<a href="http://d.hatena.ne.jp/language_and_engineering/20111006/p1">http://d.hatena.ne.jp/language_and_engineering/20111006/p1</a></p>

<h2>Facebook Graph API</h2>

<ul>
<li>グラフ上の全てのオブジェクトに固有IDがふられる</li>
<li><code>https://graph.facebook.com/ID</code>にリクエストすることで，オブジェクトの持つ要素へアクセスできる</li>
<li>レスポンスはすべてJSON形式</li>
<li><code>https://graph.facebook.com/ID/CONNECTION_TYPE</code>で，オブジェクト感のコネクション（関連性）を確かめることができる</li>
</ul>


<p>またFacebook Query Language（FQL）も使うことができる（<a href="http://developers.facebook.com/docs/reference/fql/">参考</a>）．  <br/>
かなり便利そう．</p>

<h2>APIのURL一覧</h2>

<p>必要そうなものは以下の二つかな？  <br/>
Graph API：<a href="http://developers.facebook.com/docs/reference/api/">http://developers.facebook.com/docs/reference/api/</a></p>

<h3>ユーザ情報</h3>

<p>Request URI：<code>https://graph.facebook.com/***</code>  <br/>
参考：<a href="http://developers.facebook.com/docs/reference/api/user/">http://developers.facebook.com/docs/reference/api/user/</a></p>

<p>※自分の情報にアクセスしたい場合は，<code>/me</code>  <br/>
※他人のe-mail情報は取得できない</p>

<h3>ページのウォールに投稿されたコメント一覧</h3>

<p>Request URI：<code>https://graph.facebook.com/***/feed</code>  <br/>
参考：<a href="http://developers.facebook.com/docs/reference/api/post/">http://developers.facebook.com/docs/reference/api/post/</a></p>

<p>※画像の取得に関しては，SDKを通す必要がない</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebookアプリ事始め]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/1/"/>
    <updated>2013-05-27T06:38:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/1</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>大変ごぶざたしておりました＼(^o^)／  <br/>
早くも飽きグセが出てヤバい感じです．</p>

<p>飲んだ勢いからFacebookページの解析が出来ないかという話題になり，完全なる勢いでFacebookアプリの開発を始めましたのでまとめます．参考にしたページは<a href="http://pr.zero-start.jp/archives/65560685.html">こちら</a>．</p>

<p>詳細は参考ページに大変詳しく書かれておりますので，こちらにはざっとした流れのみを書いておきます．  <br/>
GoogleAppEngine+Python．</p>

<h2>1st step. Google App Engine</h2>

<ol>
<li>Google App Engineアカウントの作成．<a href="http://code.google.com/intl/ja/appengine/">コチラ</a>からどうぞ．</li>
<li><code>Create Application</code> → 必要情報の入力（アプリ名とURLは後で使うのでメモっておく）</li>
<li>Application Registered Successfullyでおｋ．</li>
<li>Google App Engine Launcherのインストール．downloadは<a href="http://code.google.com/intl/ja/appengine/downloads.html">コチラ</a>からどうぞ．</li>
<li>Launcherを立ち上げる（Symlink関係はOKで ← 適当）．</li>
</ol>


<h2>2nd step. Facebook Developers</h2>

<ol>
<li>Facebook Developersに登録．<a href="http://developers.facebook.com/">コチラ</a>からどうぞ．</li>
<li><code>Apps</code> → <code>新しいアプリを作成</code> → 必要情報の入力．</li>
<li><code>基本設定</code> → <code>Facebookでログインするウェブサイト</code> → 先ほどGoogle App Engineで登録したApplicationのURL．  <br/>
E.g. <a href="http://****.appspot.com/">http://****.appspot.com/</a></li>
<li>App IDとApp Secretをメモっておく．</li>
</ol>


<h2>3rd step. facebook-sdk (Python)</h2>

<ol>
<li>Githubからfacebook-sdk（Python）を入手＆解凍．コチラからどうぞ．</li>
<li>PC上のお好きな場所にアプリ名と同様のフォルダを作成．</li>
<li>facebook-sdk中から，facebook.pyおよびexamples/appengine/の中身全てをフォルダに移動．</li>
<li>app.yaml中のapplication名を当該アプリ名に変更 → 保存．  <br/>
E.g. application: *****</li>
<li>example.pyの<code>FACEBOOK_APP_ID</code>および，<code>FACEBOOK_APP_SECRET</code>を変更 → 保存．</li>
</ol>


<h2>4th step. Deploy</h2>

<ol>
<li>GoogleAppEngineLauncherから<code>File</code> → <code>Add Existing Application</code> → 作成したフォルダを選択</li>
<li><code>Deploy</code> → 必要情報を入力 → ログイン！</li>
<li>exist code 0で成功</li>
<li>登録したアプリサイトにとぶ</li>
<li>ログインボタンがあるはず（成功！）</li>
</ol>


<p>あとはexample.pyやexample.htmlをいじっていけばいいよう．  <br/>
とりあえずスタートライン:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Pages+OctopressでBlog作成]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/26/1/"/>
    <updated>2013-05-26T07:49:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/26/1</id>
    <content type="html"><![CDATA[<p>BloggerからGithub Pages+Octopressに乗り換えたのでそのまとめ．  <br/>
テスト投稿も兼ねてます．</p>

<p>Github Pages: <a href="http://pages.github.com/">http://pages.github.com/</a>  <br/>
Octopress: <a href="http://octopress.org/">http://octopress.org/</a></p>

<!-- more -->


<p>Github Pagesを利用することで，ウェブサイトをGitで管理し，更にはGithubへプッシュすることでウェブサイトを公開できる（細かい話は割愛）．
今回はOctopressというRailsで作られたframeworkを利用し，ローカルで作成したページを自動コミット／プッシュする．  <br/>
詳細についてはリンク先を参照：<a href="http://blog.eiel.info/blog/2013/02/17/github-pages/">http://blog.eiel.info/blog/2013/02/17/github-pages/</a></p>

<h2>ローカル環境</h2>

<p>OS: MacOS X 10.7</p>

<h2>環境構築手順</h2>

<h3>Github Repoの用意</h3>

<p>Github pagesを利用するために，Githubに<code>username.github.com</code>という名前でリポジトリを作成する（今回は，amacbee.github.com）．</p>

<h3>Ruby環境のセットアップ</h3>

<p>Macにおけるrubyのデフォルトは1.8.*だが，Octopress導入には1.9.3p194が必要となる(2013年5月現在)．
そこでVersion管理ツールrbenvを利用して，ruby環境を構築する．</p>

<p>まずはrbenvの導入．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ brew install rbenv
</span><span class='line'>$ brew install ruby-build
</span></code></pre></td></tr></table></div></figure>


<p>.zshrcに以下を記述．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># rbenv setting</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;$HOME/.rbenv/bin:$PATH&quot;</span>
</span><span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>rbenvのPATHを追加したら，以下の通りインストールして設定する．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ rbenv install 1.9.3-p194
</span><span class='line'>$ rbenv rehash
</span><span class='line'>$ rbenv global 1.9.3-p194
</span></code></pre></td></tr></table></div></figure>


<p>次にパッケージ（Gem）管理ツールであるbundleのインストール．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ gem install bundler
</span></code></pre></td></tr></table></div></figure>


<p>これでOctopressを導入するためのRuby環境構築はひとまず終了．</p>

<h3>Octopressの導入</h3>

<p>適当なディレクトリにOctopressをcloneしてインストール．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ cd ~/Documents/
</span><span class='line'>$ git clone https://github.com/imathis/octopress.git
</span><span class='line'>$ cd octopress
</span><span class='line'>$ bundle install
</span><span class='line'>$ rake install
</span></code></pre></td></tr></table></div></figure>


<p>これでOctopressが導入できた．  <br/>
正しく導入できたかを確認するために，以下のコマンドを実行する．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ rake generate
</span><span class='line'>$ rake preview
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://localhost:4000">http://localhost:4000</a> を参照し，正しく導入できているかを確認する．</p>

<p>正しく導入できていた事を確認したら，デプロイする．
以下のコマンドを実行し，デプロイ先のリポジトリとして<code>git@github.com:amacbee/amacbee.github.com.git</code>を指定する．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>これで指定したリポジトリのmasterに生成したファイルがcommitされた．
以下のコマンドを実行することで，push → デプロイされる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ rake generate
</span><span class='line'>$ rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>後述するSublime Textを利用することで，デプロイ処理はエディタ内で行うことができる．</p>

<p>力尽きたので投稿方法や各種設定等については割愛．</p>

<h2>「Sublime Text 2 Octopress」の導入</h2>

<p>OctopressをSublimeから利用するために環境を構築する．幸いなことに専用Packageが既に用意されていたため，Package Contorolから&#8221;Octopress&#8221;を導入（Package Contorolについては別記事参照）．  <br/>
このPackageに関する情報についてはリンク先を参照：<a href="https://github.com/blueplanet/sublime-text-2-octopress">https://github.com/blueplanet/sublime-text-2-octopress</a></p>

<p>READMEに従って，設定を以下の通りに書き換えた．  <br/>
Sublime Text 2 &ndash;> Preference &ndash;> Package Settings &ndash;> Octopress &ndash;> Setting &ndash; User</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">//</span> <span class="err">path</span> <span class="err">to</span> <span class="err">your</span> <span class="err">octopress</span>
</span><span class='line'>  <span class="nt">&quot;octopress_path&quot;</span><span class="p">:</span> <span class="s2">&quot;~/Documents/octopress&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">the</span> <span class="err">shell</span> <span class="err">to</span> <span class="err">run</span> <span class="err">commands</span> <span class="err">with</span>
</span><span class='line'>  <span class="nt">&quot;octopress_shell_executable&quot;</span><span class="p">:</span> <span class="s2">&quot;/bin/zsh&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">command</span> <span class="err">to</span> <span class="err">run</span> <span class="err">before</span> <span class="err">calling</span> <span class="err">rake,</span> <span class="err">eg</span> <span class="err">source</span> <span class="err">~/bash_profile</span> <span class="err">to</span> <span class="err">set</span> <span class="err">up</span> <span class="err">your</span> <span class="err">local</span> <span class="err">environment</span> <span class="err">inc</span> <span class="err">paths</span> <span class="err">to</span> <span class="err">ruby,</span> <span class="err">rake</span> <span class="err">etc.</span>
</span><span class='line'>  <span class="nt">&quot;octopress_cmd_before_rake&quot;</span> <span class="p">:</span> <span class="s2">&quot;source ~/.zshrc&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">set</span> <span class="err">to</span> <span class="err">generate,</span> <span class="err">deploy</span> <span class="err">or</span> <span class="err">generate_and_deploy</span> <span class="err">if</span> <span class="err">you</span> <span class="err">wish</span> <span class="err">to</span> <span class="err">have</span> <span class="err">your</span> <span class="err">changes</span> <span class="err">generated</span> <span class="err">into</span> <span class="err">the</span> <span class="err">/public</span> <span class="err">folder</span> <span class="err">and/or</span> <span class="err">deployed</span> <span class="err">upon</span> <span class="err">file</span> <span class="err">save</span>
</span><span class='line'>  <span class="nt">&quot;octopress_onsave_action&quot;</span><span class="p">:</span> <span class="s2">&quot;generate&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">set</span> <span class="err">to</span> <span class="err">the</span> <span class="err">extension</span> <span class="err">of</span> <span class="err">all</span> <span class="err">new</span> <span class="err">pages.</span> <span class="err">This</span> <span class="err">should</span> <span class="err">be</span> <span class="err">the</span> <span class="err">same</span> <span class="err">as</span> <span class="err">in</span> <span class="err">your</span> <span class="err">Rakefile</span> <span class="err">setting</span> <span class="err">for</span> <span class="err">new_page_ext</span>
</span><span class='line'>  <span class="nt">&quot;octopress_page_extension&quot;</span><span class="p">:</span> <span class="s2">&quot;markdown&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">set</span> <span class="err">to</span> <span class="err">the</span> <span class="err">extension</span> <span class="err">of</span> <span class="err">all</span> <span class="err">new</span> <span class="err">posts.</span> <span class="err">This</span> <span class="err">should</span> <span class="err">be</span> <span class="err">the</span> <span class="err">same</span> <span class="err">as</span> <span class="err">in</span> <span class="err">your</span> <span class="err">Rakefile</span> <span class="err">setting</span> <span class="err">for</span> <span class="err">posts_dir</span>
</span><span class='line'>  <span class="nt">&quot;octopress_posts_dir&quot;</span><span class="p">:</span> <span class="s2">&quot;_posts&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">true</span> <span class="err">or</span> <span class="err">false</span>
</span><span class='line'>  <span class="nt">&quot;use_bundle&quot;</span><span class="p">:</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかし以下のようなエラーが発生．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>error: Octopress exec failed. Please check octopress env, and try again.
</span><span class='line'>You can check exec log in sublime console.
</span></code></pre></td></tr></table></div></figure>


<p><code>cmd+`</code>でConsoleを開き，エラーメッセージを確認してみる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>YAML Exception reading 2013-05-26-1.markdown: invalid byte sequence in US-ASCII
</span></code></pre></td></tr></table></div></figure>


<p>文字コード周りでおこられているらしい．
そこで公式の「In the case of an error, please see the RVM or Rbenv errors」のページを参照したところ「rbenv」項目に以下の記述を発見した．</p>

<blockquote><p>mine ~/.bashrc looks like:</p>

<p>PATH=&ldquo;$HOME/.rbenv/versions/1.9.3-p194/bin:$PATH&rdquo;  <br/>
cmd_before_rake is source ~/.bashrc &amp;&amp; export LANG=en_US.UTF-8 &amp;&amp; export LC_ALL=en_US.UTF-8  <br/>
but you shall not include &amp;&amp; export LANG=en_US.UTF-8 &amp;&amp; export LC_ALL=en_US.UTF-8 if you write in English</p></blockquote>

<p>対処方に従いlocaleの設定を行う．以下のように設定を書き換えた．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">//</span> <span class="err">command</span> <span class="err">to</span> <span class="err">run</span> <span class="err">before</span> <span class="err">calling</span> <span class="err">rake,</span> <span class="err">eg</span> <span class="err">source</span> <span class="err">~/bash_profile</span> <span class="err">to</span> <span class="err">set</span> <span class="err">up</span> <span class="err">your</span> <span class="err">local</span> <span class="err">environment</span> <span class="err">inc</span> <span class="err">paths</span> <span class="err">to</span> <span class="err">ruby,</span> <span class="err">rake</span> <span class="err">etc.</span>
</span><span class='line'>  <span class="nt">&quot;octopress_cmd_before_rake&quot;</span> <span class="p">:</span> <span class="s2">&quot;source ~/.zshrc &amp;&amp; export LANG=ja_JP.UTF-8 &amp;&amp; export LC_ALL=ja_JP.UTF-8&quot;</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで無事に動作した．</p>
]]></content>
  </entry>
  
</feed>
