<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | 酒飲みの備忘録]]></title>
  <link href="http://amacbee.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://amacbee.github.io/"/>
  <updated>2014-02-08T03:37:00+09:00</updated>
  <id>http://amacbee.github.io/</id>
  <author>
    <name><![CDATA[a.macbee]]></name>
    <email><![CDATA[a.macbee@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sublime TextでPython環境を構築する話]]></title>
    <link href="http://amacbee.github.io/blog/2014/02/08/1/"/>
    <updated>2014-02-08T00:18:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2014/02/08/1</id>
    <content type="html"><![CDATA[<p>以前書いた「<a href="http://amacbee.github.io/blog/2013/05/27/5/">恋に落ちるエディタ &ndash; Sublime Text &ndash; との関係をリセット</a>」の続編．<br/>
Python環境周りについてのまとめ．</p>

<!-- more -->


<p>Sublime TextのPython環境ってどうなってますか？と質問されて，そういえばPC変えてから特に設定してなかったことに気づいたので，この機会にまとめて設定してみました．<br/>
以下が導入したPackageです．</p>

<ul>
<li>SublimeRope</li>
<li>Python PEP8 Lint</li>
<li>SublimeRPEL</li>
</ul>


<p>順番に説明していきます．</p>

<h1>SublimeRope</h1>

<p>SublimeRopeはSublime TextにおけるPython用統合開発環境です．
おなじみ<code>cmd+shift+p</code>→<code>Package Control: Install Package</code>→<code>SublimeRope</code>と選択することで簡単に導入できます（Package Controlの導入がまだな場合は，<a href="http://amacbee.github.io/blog/2013/05/27/5/">以前の記事</a>を参考に先にPackage Controlを導入して下さい）．</p>

<p>SublimeRopeが導入できたら，Sublime TextからPythonを呼び出せるようにパスを通します．
<a href="http://amacbee.github.io/blog/2013/05/27/5/">以前の記事</a>でも書いたように，<code>Preference</code>→<code>Setting - User</code>で設定ファイルを開いて，PATH属性を指定すればOKです．</p>

<p>```sh
{</p>

<pre><code>"build_env":
{
    "PATH": "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin"
}
</code></pre>

<p>}
```</p>

<p>使い方についてはSublimeRopeのGetting Starttedページに詳細が載っています．<br/>
<a href="http://sublimerope.readthedocs.org/en/latest/getting_started.html">http://sublimerope.readthedocs.org/en/latest/getting_started.html</a> <br/>
<code>cmd+shift+p</code>→<code>rope</code>と入力すると，使用できる機能が一覧できます．</p>

<h1>Sublime PEP8 Lint</h1>

<p>Sublime PEP8 Lintは，Python構文をコーディング規約“PEP 8”に従ってチェックしてくれます．
導入はPackage Controlで一瞬です(<code>cmd+shift+p</code>→<code>Package Control: Install Package</code>→<code>Sublime PEP8 Lint</code>)．</p>

<h1>SublimeREPL</h1>

<p>SublimeREPLはPythonだけに限らず様々な言語に対するREPLを提供したPackageです．
導入は，こちらも同じくPackage Controlで一瞬です(<code>cmd+shift+p</code>→<code>Package Control: Install Package</code>→<code>SublimeREPL</code>)．</p>

<h1>使ってみる</h1>

<p>では実際にPythonコードを書いてみましょう．<br/>
まずは補完機能です．<code>p</code>と入力したところで<code>ctrl+space</code>を押してみて下さい．<br/>
以下の様にコードが補完されます．</p>

<p><img style="border-width:0" src="https://db.tt/1Slcszfn" /></p>

<p>私の環境ではSublimeCodeIntelを導入しているため，<code>ctrl+space</code>を入れなくてもリアルタイムに候補が出てくるようになっています．
こちらについてもPackage Controlから容易に導入できるのでぜひ試してみて下さい．</p>

<p>もちろんSublime Textの強力なGoto Anything機能も利用できます．</p>

<ul>
<li><code>cmd+p</code>→<code>@</code>: クラスや関数などの一覧</li>
<li><code>cmd+p</code>→<code>:</code>: ファイルの行指定</li>
</ul>


<p>Sublime PEP8 Lintを導入しているため，Pythonのコーディング規約に従っていない場合，保存時に以下のようなメッセージが現れます．</p>

<p><img style="border-width:0" src="https://db.tt/zFiEpqmX" /></p>

<p>コードを書き終えたら<code>cmd+b</code>で実行できます．<br/>
実行例は以下のような感じです．</p>

<p><img style="border-width:0" src="https://db.tt/2vpFF1b0" /></p>

<p>REPLを利用する場合は，<code>cmd+shift+p</code>→<code>repl</code>と打ち，言語としてPythonを選択すればOKです．<br/>
次のような結果が得られます．</p>

<p><img style="border-width:0" src="https://db.tt/KxBh4B3n" /></p>

<p>かなりざっくりとした感じになってしまいましたが，とりあえず最低限の環境は作れた感じです．<br/>
なんて簡単なんだ・・・Package Control最高！
そのうちスニペットとかも作るかもしれません．</p>

<h1>参考にしたページ</h1>

<ul>
<li><a href="http://qiita.com/skinoshita/items/ef86f528fbeb5652fc05">Sublime Text 2でPythonの開発環境を整える &ndash; Qiita</a></li>
<li><a href="http://cockscomb.info/environmental_variable_for_sublime_text_2/">Sublime Text 2 と環境変数 &ndash; cockscomb.info</a></li>
<li><a href="http://elfcobe.hateblo.jp/entry/2013/05/14/175741">Windows の SublimeText2 で Python [ SublimeREPL パッケージ ] &ndash; けいれん現象の幽玄美よ</a></li>
</ul>


<br/>


<br/>


<br/>


<p>それではみなさんSublime Textで快適なPythonライフを！</p>

<p>・・・しかし論文を書いてるときってどうしてこう環境構築が捗るのか．<br/>
永遠の謎だ←</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python環境 for 集合知プログラミング]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/4/"/>
    <updated>2013-05-27T07:21:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/4</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>常日頃からデータマイニングを勉強したいという方にはO'REILLYの「集合知プログラミング」をオススメしていた私ですが，色々あってこの本を参考書にデータマイニング勉強会を開くことになりました．  <br/>
この本はPythonをベースとして書かれているのですが，勉強会向けにVPS上にPython環境 for 集合知プログラミングを構築しましたのでまとめます．  <br/>
必要ライブラリのリストは，「付録A サードパーティによるライブラリたち」を参考にしました（導入にはpipを利用しています）．</p>

<h2>Python 2.7.x の導入</h2>

<p>CentOS 6.3に2.7系を導入する（標準は2.6系）．</p>

<p>インストールに必要なものたちを導入</p>

<p><code>
$ sudo yum install zlib zlib-devel tk-devel tcl-devel sqlite-devel ncurses-devel gdbm-devel readline-devel bzip2-devel db4-devel openssl-devel
</code></p>

<p>Pythonをダウンロードして解凍</p>

<p><code>
$ wget http://www.python.org/ftp/python/2.7/Python-2.7.tgz
$ tar xzvf Python-2.7.tgz
</code></p>

<p>インストール</p>

<p><code>
$ ./configure --with-threads --enable-shared --prefix=/usr/local
$ make
$ sudo make install
</code></p>

<p>これでOK！  <br/>
正常にインストールされているかどうかは以下のコマンドで確認できる．</p>

<p><code>
$ python -V
Python 2.7.2
</code></p>

<p>ここでもし下記のメッセージ</p>

<p><code>
python: error while loading shared libraries: libpython2.7.so.1.0: cannot open shared object file: No such file or directory
</code></p>

<p>が表示された場合は，.bashrcなどに<code>LD_LIBRARY_PATH</code>を追加</p>

<p><code>
$ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
$ source .bashrc
</code></p>

<h2>Pythonパッケージ管理システムの導入</h2>

<p>easy_installおよびpipを導入．  <br/>
setuptoolsではなくdistributeから入れます．</p>

<p><code>
$ wget http://python-distribute.org/distribute_setup.py
$ sudo /usr/local/bin/python2.7 distribute_setup.py
$ sudo easy_install pip
</code></p>

<h2>必要ライブラリの導入</h2>

<p>導入したライブラリ群は以下のコマンドで確かめられる．
<code>
$ pip freeze
</code></p>

<h3>A.1 Universal Feed Parser</h3>

<p><code>
$ sudo pip install feedparser
</code></p>

<h3>A.2 PIL（Python Image Library）</h3>

<p><code>
$ sudo pip install pil
</code></p>

<h3>A.3 Beautiful Soup</h3>

<p><code>
$ sudo pip install beautifulsoup
</code></p>

<h3>A4 pysqlite</h3>

<p><code>
$ sudo pip install pysqlite
</code></p>

<p>※標準で入っているsqlite3でも良いと思います．</p>

<h3>A.5 Numpy（ついでにScipy）</h3>

<p>NumPyおよびSciPyを導入するために，以下の3つを導入</p>

<p><code>
$ sudo yum install gcc-gfortran
$ sudo yum install blas-devel
$ sudo yum install lapack-devel
</code></p>

<p>NumPyおよびSciPyのインストール</p>

<p><code>
$ sudo pip install numpy
$ sudo pip install scipy
</code></p>

<h3>A.6 matplotlib</h3>

<p>matplotlibを導入するために，以下を導入</p>

<p><code>
$ sudo yum install libpng-devel
</code></p>

<p>matplotlibのインストール</p>

<p><code>
$ sudo pip install matplotlib
</code></p>

<h3>A.7 pydelicious</h3>

<p><code>
$ sudo pip install pydelicious
</code></p>

<p>以上で環境構築は終了（だと思われます）！</p>
]]></content>
  </entry>
  
</feed>
