<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cent_os | 酒飲みの備忘録]]></title>
  <link href="http://amacbee.github.io/blog/categories/cent-os/atom.xml" rel="self"/>
  <link href="http://amacbee.github.io/"/>
  <updated>2013-11-28T04:22:53+09:00</updated>
  <id>http://amacbee.github.io/</id>
  <author>
    <name><![CDATA[a.macbee]]></name>
    <email><![CDATA[a.macbee@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rsyncでディレクトリのバックアップ]]></title>
    <link href="http://amacbee.github.io/blog/2013/07/11/1/"/>
    <updated>2013-07-11T02:18:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/07/11/1</id>
    <content type="html"><![CDATA[<p>Linuxの標準的バックアップツールrsyncを使ってディレクトリのバックアップを作成する．</p>

<!-- more -->


<p>参考にしたページ達：<br />
<a href="http://www.itmedia.co.jp/enterprise/articles/0804/21/news013.html">http://www.itmedia.co.jp/enterprise/articles/0804/21/news013.html</a> <br />
<a href="http://www.maruko2.com/mw/rsync_%E3%81%A7%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AE%E5%90%8C%E6%9C%9F%EF%BC%88%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%EF%BC%89">http://www.maruko2.com/mw/rsync_でディレクトリの同期（バックアップ）</a> <br />
<a href="http://x68000.q-e-d.net/~68user/unix/pickup?rsync">http://x68000.q-e-d.net/~68user/unix/pickup?rsync</a></p>

<h1>rsyncの実行</h1>

<p>各種オプション等については参考ページにて大変詳細かつ分かりやすく記載されているのでここでは省略．<br />
以下のコマンドを実行した．<br /></p>

<p><code>
$ rsync -avh /コピー元 /コピー先
</code></p>

<p>rsyncではコピー元のディレクトリ名指定に気をつける（スラッシュのあるなしでかなり違う）．</p>

<ul>
<li>rsync -avh /コピー元 /コピー先 <br />
ディレクトリも含めてコピー</li>
<li>rsync -avh /コピー元/ /コピー先 <br />
指定したディレクトリ以下をコピー</li>
</ul>


<p>なお，コピー先の指定の場合はどちらでも大丈夫．</p>

<h1>実行時のエラー</h1>

<p>rsyncを実行してしばらくたつと，以下のメッセージを吐いてバックアップがこけた．</p>

<p><code>
rsync: writefd_unbuffered failed to write 4 bytes to socket [sender]: Broken pipe (32)
rsync: write failed on "ファイル名": No space left on device (28)
rsync error: error in file IO (code 11) at receiver.c(301) [receiver=3.0.6]
rsync: connection unexpectedly closed (31 bytes received so far) [sender]
rsync error: error in rsync protocol data stream (code 12) at io.c(600) [sender=3.0.6]
</code></p>

<p>何事だろうと思ってこけたファイルを確認すると，</p>

<p><code>
$ ls
-rw-r--r--. 1 root 96G  3月 10 12:22 2012 /****/***.gz
</code></p>

<p>96GB＼(^o^)／ｗ <br />
このファイルに対してコピー先HDDのフォーマットがFAT32だったのが原因だった．<br />
FAT32はファイル制限が4GBなので，どう頑張っても対象ファイルのバックアップはとれない．<br />
詳細はリンク先を参照：<a href="http://glenrothes.blog27.fc2.com/blog-category-4.html">http://glenrothes.blog27.fc2.com/blog-category-4.html</a></p>

<p>NTFSでフォーマットし直して無事にバックアップがとれた．</p>

<h1>rsyncの定期実行</h1>

<p>無事にrsyncが実行できていることを確認したら，cronを利用してrsyncを定期実行させる．<br />
ここで再び問題発生．</p>

<p><code>
$ crontab -l
zsh: command not found: crontab
$ which crontab
/usr/bin/which: no crontab in (****)
</code></p>

<p>crontabがないのでyumから導入する．</p>

<p><code>
$ yum install crontabs vixie-cron
$ crontab -l
no crontab for root
</code></p>

<p>これでよし． <br />
cronを実行するためにcrondの設定も行う．</p>

<p><code>
$ service crond status
crond は停止しています
$ service start crond
crond を起動中:                                            [  OK  ]
$ chkconfig crond on
$ chkconfig --list
crond           0:off   1:off   2:on    3:on    4:on    5:on    6:off
</code></p>

<p>最後に<code>crontab -e</code>を実行し，に以下の様に処理を追加．</p>

<p><code>
00 3 * * * root /usr/bin/rsync -avh /コピー元 /コピー先
</code></p>

<p>この例では，毎日午前3時にrsyncコマンドによるバックアップ処理を行なっている． <br />
crontabの書き方についてはリンク先参照：<a href="http://www.server-memo.net/tips/crontab.html">http://www.server-memo.net/tips/crontab.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最低限のサーバ監視]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/6/"/>
    <updated>2013-05-27T07:46:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/6</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>先日サーバ設定を一新したのですが，そういえばログの監視をしていなかった．  <br/>
ということで，logwatchでも導入しよう．  <br/>
（logwatchを導入することで，logを整形して1日1回メールで報告してくれる．<code>/etc/cron.daily</code>に<code>0logwatch</code>が追加されてるはず）  <br/></p>

<p><code>
$ sudo yum install logwatch
</code></p>

<p>メールを届ける環境が整っているのか確かめたい場合は，以下のコマンドを利用して，試しに自分宛にメールを送ってみて下さい．  <br/></p>

<p><code>
$ sudo logwatch --mailto [自分のメールアドレス]
</code></p>

<p>無事に送信できることを確認したら，以下のとおり設定ファイルを編集  <br/>
詳細については，以下のサイトを参照．  <br/>
URL：<a href="http://landisk.kororo.jp/diary/29_logwatch.php">http://landisk.kororo.jp/diary/29_logwatch.php</a></p>

<p>```
$ sudo emacs /etc/logwatch/conf/logwatch.conf</p>

<pre><code>Detail = Med
MailTo = [自分のメールアドレス]
Range = yesterday
</code></pre>

<p>```</p>

<p>ひとまずこれで．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cent OS 6.3にexFATをmountした話]]></title>
    <link href="http://amacbee.github.io/blog/2013/05/27/3/"/>
    <updated>2013-05-27T07:13:00+09:00</updated>
    <id>http://amacbee.github.io/blog/2013/05/27/3</id>
    <content type="html"><![CDATA[<p>※前サイトからの移行です．</p>

<!-- more -->


<hr />

<p>諸事情により，Cent OS 6.3にexFATでフォーマットされたUSBをmountしてみましたのでそのまとめ（exFATはdefaultではサポートされていない）．  <br/>
参考にしたページ：<a href="http://yowatari.hatenablog.com/entry/2012/08/29/200325">CentOS6.3でexFATをマウントする</a></p>

<p>まずは必要ライブラリを先にinstall．</p>

<p><code>
$ yum install auto-buildrequires fuse-devel scons gcc rpm-build
</code></p>

<p>次に<a href="https://code.google.com/p/exfat/">ココ</a>から<code>exfat-utils</code>および<code>fuse-exfat</code>をdownloadしてくる．
ちなみに今回導入したVer.は以下の通り．</p>

<ul>
<li>exfat-utils-1.0.1.tar.gz</li>
<li>fuse-exfat-1.0.1.tar.gz</li>
</ul>


<p>downloadしたフォルダを展開し，それぞれのフォルダにて以下のコマンドを実行（詳細はREADMEを参照）．</p>

<p><code>
$ scons
$ sudo scons install
</code></p>

<p>これでmountの準備ができた．</p>

<p>実際にmountしてみる．  <br/>
今回は，<code>/mnt/usb</code>というフォルダを作成し，そこへのmountを試みる．なお，USBに割り当てられたデバイス名は事前に確認しておく（dmesgコマンド等を活用して下さい）</p>

<p><code>
$ mount -t exfat /dev/sdb1 /mnt/usb
</code></p>

<p>成功していれば，<code>FUSE exfat 1.0.1</code>のようなメッセージが出る．</p>

<p>これで無事にmountできました．</p>
]]></content>
  </entry>
  
</feed>
